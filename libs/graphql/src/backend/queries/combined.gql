query GetOidcRedirectUrl {
	getOidcRedirectUrl
}

query UserByOidcIssuerId($oidcIssuerId: String!) {
	userByOidcIssuerId(oidcIssuerId: $oidcIssuerId)
}

query GetOidcToken($code: String!) {
	getOidcToken(code: $code) {
		subject
		email
	}
}

query GetPresignedS3Url($key: String!) {
	getPresignedS3Url(key: $key)
}

query UserExports {
	userExports {
		url
		key
		size
		endedAt
		startedAt
	}
}

query UserCollectionsList($name: String) {
	userCollectionsList(name: $name) {
		id
		name
		count
		isDefault
		description
		creator {
			id
			name
		}
		collaborators {
			id
			name
		}
		informationTemplate {
			lot
			name
			required
			description
			defaultValue
		}
	}
}

query UserIntegrations {
	userIntegrations {
		id
		lot
		provider
		createdOn
		isDisabled
		maximumProgress
		minimumProgress
		lastTriggeredOn
		syncToOwnedCollection
	}
}

query UserNotificationPlatforms {
	userNotificationPlatforms {
		id
		lot
		createdOn
		isDisabled
		description
	}
}

query UsersList($query: String) {
	usersList(query: $query) {
		id
		lot
		name
		isDisabled
	}
}

query UserMetadataRecommendations($shouldRefresh: Boolean) {
	userMetadataRecommendations(shouldRefresh: $shouldRefresh)
}

query UserUpcomingCalendarEvents($input: UserUpcomingCalendarEventInput!) {
	userUpcomingCalendarEvents(input: $input) {
		...CalendarEventPart
	}
}

query UserCalendarEvents($input: UserCalendarEventInput!) {
	userCalendarEvents(input: $input) {
		date
		events {
			...CalendarEventPart
		}
	}
}

query MetadataPartialDetails($metadataId: String!) {
	metadataPartialDetails(metadataId: $metadataId) {
		id
		lot
		title
		image
		publishYear
	}
}

query MetadataGroupsList($input: MetadataGroupsListInput!) {
	metadataGroupsList(input: $input) {
		details {
			total
			nextPage
		}
		items
	}
}

query PeopleList($input: PeopleListInput!) {
	peopleList(input: $input) {
		details {
			total
			nextPage
		}
		items
	}
}

query UserAccessLinks {
	userAccessLinks {
		id
		name
		isDemo
		createdOn
		expiresOn
		timesUsed
		isRevoked
		maximumUses
		isAccountDefault
		isMutationAllowed
	}
}

query ExerciseDetails($exerciseId: String!) {
	exerciseDetails(exerciseId: $exerciseId) {
		id
		lot
		name
		level
		force
		source
		muscles
		mechanic
		equipment
		createdByUserId
		attributes {
			instructions
			images
		}
	}
}

query ExercisesList($input: ExercisesListInput!) {
	exercisesList(input: $input) {
		items
		details {
			total
			nextPage
		}
	}
}

query ImportReports {
	importReports {
		id
		source
		progress
		startedOn
		finishedOn
		wasSuccess
		estimatedFinishTime
		details {
			import {
				total
			}
			failedItems {
				lot
				step
				error
				identifier
			}
		}
	}
}

query GenresList($input: SearchInput!) {
	genresList(input: $input) {
		items
		details {
			total
			nextPage
		}
	}
}

query GenreDetails($input: GenreDetailsInput!) {
	genreDetails(input: $input) {
		details {
			id
			name
			numItems
		}
		contents {
			details {
				total
				nextPage
			}
			items
		}
	}
}

query CollectionContents($input: CollectionContentsInput!) {
	collectionContents(input: $input) {
		user {
			id
			name
		}
		reviews {
			...ReviewItemPart
		}
		results {
			details {
				total
				nextPage
			}
			items {
				entityId
				entityLot
			}
		}
		details {
			name
			description
			createdOn
		}
	}
}

query CoreDetails {
	coreDetails {
		version
		docsLink
		pageSize
		websiteUrl
		smtpEnabled
		oidcEnabled
		signupAllowed
		repositoryLink
		disableTelemetry
		tokenValidForDays
		localAuthDisabled
		fileStorageEnabled
		peopleSearchSources
		isServerKeyValidated
		metadataGroupSourceLotMappings {
			lot
			source
		}
		metadataLotSourceMappings {
			lot
			sources
		}
		metadataProviderLanguages {
			source
			default
			supported
		}
		frontend {
			url
			oidcButtonLabel
			dashboardMessage
			umami {
				domains
				scriptUrl
				websiteId
			}
		}
		exerciseParameters {
			downloadRequired
			filters {
				type
				level
				force
				mechanic
				equipment
				muscle
			}
			lotMapping {
				lot
				bests
			}
		}
	}
}

query MetadataGroupDetails($metadataGroupId: String!) {
	metadataGroupDetails(metadataGroupId: $metadataGroupId) {
		contents
		details {
			id
			lot
			title
			parts
			source
			isPartial
			sourceUrl
			identifier
			description
			displayImages
		}
	}
}

query MetadataGroupSearch($input: MetadataGroupSearchInput!) {
	metadataGroupSearch(input: $input) {
		details {
			total
			nextPage
		}
		items {
			identifier
			name
			image
			parts
		}
	}
}

query MetadataList($input: MetadataListInput!) {
	metadataList(input: $input) {
		details {
			total
			nextPage
		}
		items
	}
}

query MetadataSearch($input: MetadataSearchInput!) {
	metadataSearch(input: $input) {
		details {
			total
			nextPage
		}
		items {
			identifier
			title
			image
			publishYear
		}
	}
}

query PeopleSearch($input: PeopleSearchInput!) {
	peopleSearch(input: $input) {
		details {
			total
			nextPage
		}
		items {
			identifier
			name
			image
			birthYear
		}
	}
}

query UserMetadataGroupDetails($metadataGroupId: String!) {
	userMetadataGroupDetails(metadataGroupId: $metadataGroupId) {
		recentlyConsumed
		reviews {
			...ReviewItemPart
		}
		collections {
			...CollectionPart
		}
	}
}

query UserPersonDetails($personId: String!) {
	userPersonDetails(personId: $personId) {
		recentlyConsumed
		collections {
			...CollectionPart
		}
		reviews {
			...ReviewItemPart
		}
	}
}

query UserWorkoutDetails($workoutId: String!) {
	userWorkoutDetails(workoutId: $workoutId) {
		collections {
			...CollectionPart
		}
		details {
			id
			name
			endTime
			duration
			startTime
			templateId
			repeatedFrom
			caloriesBurnt
			summary {
				...WorkoutSummaryPart
			}
			information {
				...WorkoutInformationPart
			}
		}
	}
}

query UserWorkoutsList($input: SearchInput!) {
	userWorkoutsList(input: $input) {
		details {
			total
			nextPage
		}
		items
	}
}

query UserWorkoutTemplateDetails($workoutTemplateId: String!) {
	userWorkoutTemplateDetails(workoutTemplateId: $workoutTemplateId) {
		collections {
			...CollectionPart
		}
		details {
			id
			name
			createdOn
			summary {
				...WorkoutSummaryPart
			}
			information {
				...WorkoutInformationPart
			}
		}
	}
}

query UserWorkoutTemplatesList($input: SearchInput!) {
	userWorkoutTemplatesList(input: $input) {
		details {
			total
			nextPage
		}
		items
	}
}

query UserAnalyticsParameters {
	userAnalyticsParameters {
		endDate
		startDate
	}
}
