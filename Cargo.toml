[workspace]
members = [
    "apps/backend",
    "crates/config",
    "crates/migrations",
    "crates/models/background",
    "crates/models/common",
    "crates/models/database",
    "crates/models/dependent",
    "crates/models/enum",
    "crates/models/fitness",
    "crates/models/importer",
    "crates/models/media",
    "crates/models/specific",
    "crates/models/user",
    "crates/providers",
    "crates/resolvers/collection",
    "crates/resolvers/exporter",
    "crates/resolvers/file-storage",
    "crates/resolvers/fitness",
    "crates/resolvers/importer",
    "crates/resolvers/miscellaneous",
    "crates/resolvers/statistics",
    "crates/resolvers/router",
    "crates/resolvers/user",
    "crates/services/cache",
    "crates/services/collection",
    "crates/services/exporter",
    "crates/services/file-storage",
    "crates/services/fitness",
    "crates/services/importer",
    "crates/services/integration",
    "crates/services/jwt",
    "crates/services/miscellaneous",
    "crates/services/notification",
    "crates/services/statistics",
    "crates/services/supporting",
    "crates/services/user",
    "crates/traits",
    "crates/utils/application",
    "crates/utils/common",
    "crates/utils/database",
    "crates/utils/dependent",
    "crates/utils/external",
    "crates/utils/env",
    "crates/utils/specific",
]
resolver = "2"

[workspace.dependencies]
askama = "0.12.1"
anyhow = "=1.0.93"
apalis = { version = "=0.6.2", features = ["catch-panic", "limit", "retry"] }
apalis-cron = "=0.6.2"
argon2 = "=0.6.0-pre.1"
async-graphql = { version = "=7.0.11", features = [
    "chrono",
    "decimal",
    "log",
    "tracing",
] }
async-graphql-axum = "=7.0.11"
async-trait = "=0.1.83"
aws-sdk-s3 = { version = "=1.63.0", features = ["behavior-version-latest"] }
axum = { version = "=0.7.9", features = ["macros", "multipart"] }
boilermates = "=0.3.0"
chrono = "=0.4.38"
chrono-tz = "=0.10.0"
compile-time = "=0.2.0"
const-str = "=0.5.7"
convert_case = "=0.6.0"
csv = "=1.3.1"
data-encoding = "=2.6.0"
derive_more = { version = "=1.0.0", features = [
    "add",
    "add_assign",
    "sum",
], default-features = false }
dotenvy = "=0.15.7"
dotenv-build = "0.1.1"
educe = { version = "=0.6.0", features = [
    "Debug",
    "Default",
    "full",
], default-features = false }
enum_meta = "=0.7.0"
eventsource-stream = "=0.2.3"
flate2 = "=1.0.35"
futures = "=0.3.31"
graphql_client = "=0.14.0"
hashbag = "=0.1.12"
http = "=1.1.0"
indexmap = "=2.7.0"
indoc = "=2.0.5"
isolang = { version = "=2.4.0", features = ["list_languages"] }
itertools = "=0.13.0"
jsonwebtoken = { version = "=9.3.0", default-features = false }
lettre = "=0.11.10"
logs-wheel = "=0.3.1"
markdown = "=1.0.0-alpha.21"
mime_guess = "=2.0.5"
nanoid = "=0.4.0"
nest_struct = "=0.5.2"
openidconnect = "=3.5.0"
paginate = "=1.1.11"
radarr-api-rs = "=3.0.1"
rand = "=0.9.0-beta.0"
regex = "=1.11.1"
rust_decimal = "=1.36.0"
rust_decimal_macros = "=1.36.0"
rust_iso3166 = "=0.1.13"
rustypipe = "0.7.2"
schematic = { version = "=0.17.7", features = [
    "config",
    "env",
    "json",
    "schema",
    "toml",
    "renderer_typescript",
    "type_chrono",
    "type_rust_decimal",
    "url",
    "renderer_template",
    "validate",
    "yaml",
], default-features = false }
scraper = "=0.21.0"
sea-orm = { version = "=1.1.1", features = [
    "debug-print",
    "postgres-array",
    "macros",
    "runtime-tokio-native-tls",
    "sqlx-postgres",
    "with-chrono",
    "with-json",
    "with-rust_decimal",
    "with-uuid",
], default-features = false }
sea-orm-migration = "=1.1.1"
sea-query = "=0.32.0"
serde = { version = "=1.0.215", features = ["derive"] }
serde_json = "=1.0.133"
serde_with = { version = "=3.11.0", features = ["chrono_0_4"] }
serde-xml-rs = "=0.6.0"
slug = "=0.1.6"
sonarr-api-rs = "=3.0.0"
strum = { version = "=0.26.3", features = ["derive"] }
struson = { version = "=0.6.0", features = ["serde"] }
reqwest = { version = "=0.12.9", features = ["json", "stream"] }
tokio = { version = "=1.41.1", features = ["full"] }
tokio-util = { version = "=0.7.12", features = ["codec"] }
tower = "=0.5.1"
tower-http = { version = "=0.6.2", features = ["catch-panic", "cors", "trace"] }
tracing = { version = "=0.1.41", features = ["attributes"] }
tracing-subscriber = "=0.3.19"
unkey = "=0.5.0"
uuid = { version = "=1.11.0", features = ["v4"], default-features = false }

[profile.release]
lto = true
