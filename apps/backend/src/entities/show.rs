//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.2

use chrono::{DateTime, Utc};
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "show")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub first_air_date: Option<DateTime<Utc>>,
    pub tmdb_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::metadata_image::Entity")]
    MetadataImage,
    #[sea_orm(has_many = "super::season::Entity")]
    Season,
}

impl Related<super::metadata_image::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MetadataImage.def()
    }
}

impl Related<super::season::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Season.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
