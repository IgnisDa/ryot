//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.2

use enum_models::{MediaLot, MediaSource, SeenState, UserToMediaReason};
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "enriched_user_to_metadata")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub title: String,
    pub lot: MediaLot,
    pub times_seen: i64,
    pub user_id: String,
    pub metadata_id: String,
    pub source: MediaSource,
    pub publish_date: Option<Date>,
    pub seen_states: Vec<SeenState>,
    pub collection_ids: Vec<String>,
    pub description: Option<String>,
    pub last_updated_on: DateTimeUtc,
    pub average_rating: Option<Decimal>,
    pub provider_rating: Option<Decimal>,
    pub media_reason: Vec<UserToMediaReason>,
    pub max_seen_finished_on: Option<DateTimeUtc>,
    pub max_seen_last_updated_on: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
