//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use async_graphql::SimpleObject;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Clone, Default, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, SimpleObject,
)]
#[sea_orm(table_name = "daily_user_activity")]
#[graphql(name = "DailyUserActivity")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub date: Date,
    #[sea_orm(primary_key, auto_increment = false)]
    #[graphql(skip)]
    pub user_id: String,
    pub review_count: i32,
    pub measurement_count: i32,
    pub workout_count: i32,
    pub workout_duration: i32,
    pub audio_book_count: i32,
    pub audio_book_duration: i32,
    pub anime_count: i32,
    pub book_count: i32,
    pub podcast_count: i32,
    pub podcast_duration: i32,
    pub manga_count: i32,
    pub movie_count: i32,
    pub movie_duration: i32,
    pub show_count: i32,
    pub show_duration: i32,
    pub video_game_count: i32,
    pub visual_novel_count: i32,
    pub total_count: i32,
    pub total_duration: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
