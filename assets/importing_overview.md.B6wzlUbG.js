import{_ as t,c as o,o as r,ah as i}from"./chunks/framework.CCLJEThB.js";const c=JSON.parse('{"title":"Importing","description":"","frontmatter":{},"headers":[],"relativePath":"importing/overview.md","filePath":"importing/overview.md","lastUpdated":1761973425000}'),a={name:"importing/overview.md"};function s(n,e,m,p,l,h){return r(),o("div",null,e[0]||(e[0]=[i('<h1 id="importing" tabindex="-1">Importing <a class="header-anchor" href="#importing" aria-label="Permalink to “Importing”">​</a></h1><p>Importing is meant to be a one-time operation. They are irreversible, i.e., importing from the same source twice will create duplicates. I recommend you to make a <a href="./../exporting.html#exporting-the-entire-database">database backup</a> before starting an import.</p><p>An import can fail at various steps or for a specific item. Ryot creates a report when an import completes/fails. You can see them under &quot;Import History&quot; of the imports page.</p><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to “Notes”">​</a></h2><ul><li>Imports will only import items that have been completed. To import items that are in progress, you need to set up an <a href="./../integrations/overview.html">integration</a> or update the progress manually.</li><li>Imports are very difficult to have 100% success rate. Though we try our best, you might have to manually import some data from your previous provider.</li><li>Imports might take a long time since Ryot needs to fetch all metadata from the sources before it can start importing progress. Estimated finish time is displayed in the UI.</li><li>I recommend turning on debug logging for the duration of the import using the <code>RUST_LOG=ryot=debug</code> environment variable. This will help you help you see import progress in the docker logs.</li><li>If your importing goes wrong, you can always reset the user data from the user settings. Keep in mind that this will delete ALL data for that user.</li></ul>',5)]))}const u=t(a,[["render",s]]);export{c as __pageData,u as default};
