import{_ as t,c as l,o as i,ah as o}from"./chunks/framework.CCLJEThB.js";const p=JSON.parse('{"title":"Jellyfin Sink","description":"","frontmatter":{},"headers":[],"relativePath":"integrations/jellyfin-sink.md","filePath":"integrations/jellyfin-sink.md","lastUpdated":1761973425000}'),a={name:"integrations/jellyfin-sink.md"};function n(s,e,r,d,c,f){return i(),l("div",null,e[0]||(e[0]=[o('<h1 id="jellyfin-sink" tabindex="-1">Jellyfin Sink <a class="header-anchor" href="#jellyfin-sink" aria-label="Permalink to “Jellyfin Sink”">​</a></h1><p>Automatically add new <a href="https://jellyfin.org/" target="_blank" rel="noreferrer">Jellyfin</a> movie and show plays to Ryot. It will work for all the media that have a valid TMDb ID attached to their metadata.</p><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>Requires the <a href="https://github.com/shemanaev/jellyfin-plugin-webhooks" target="_blank" rel="noreferrer">unofficial webhook plugin</a> to be installed and active in Jellyfin.</p></div><ol><li>Generate a slug in the integration settings page. Copy the newly generated webhook Url.</li><li>In the Jellyfin webhook plugin settings, add a new webhook using the following settings: <ul><li>Webhook URL =&gt; <code>&lt;paste_url_copied&gt;</code></li><li>Payload format =&gt; <code>Default</code></li><li>Listen to events only for =&gt; Choose your user</li><li>Events =&gt; <code>Play</code>, <code>Pause</code>, <code>Resume</code>, <code>Stop</code> and <code>Progress</code></li></ul></li></ol>',4)]))}const g=t(a,[["render",n]]);export{p as __pageData,g as default};
