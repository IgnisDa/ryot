import{v as n}from"./chunks/variables.D84Etxxq.js";import{c as e,o as l,ah as a,j as i,a as t,k as h}from"./chunks/framework.CCLJEThB.js";const k=["href"],g=JSON.parse('{"title":"Deployment","description":"","frontmatter":{},"headers":[],"relativePath":"deployment.md","filePath":"deployment.md","lastUpdated":1761973425000}'),p={name:"deployment.md"},y=Object.assign(p,{setup(r){return(o,s)=>(l(),e("div",null,[s[9]||(s[9]=a(`<h1 id="deployment" tabindex="-1">Deployment <a class="header-anchor" href="#deployment" aria-label="Permalink to “Deployment”">​</a></h1><p>The easiest way to deploy Ryot is using the <a href="./#installation">docker compose</a>. Here is a non-exhaustive set of guides to deploy Ryot to alternative platforms.</p><h2 id="railway" tabindex="-1">Railway <a class="header-anchor" href="#railway" aria-label="Permalink to “Railway”">​</a></h2><ol><li>Click on &quot;+ New Project&quot; on your dashboard and select &quot;Empty project&quot;.</li><li>Once the project is created click on &quot;+ New&quot; and select &quot;Database&quot; and then &quot;Add PostgreSQL&quot;.</li><li>Click on &quot;+ New&quot; again and select &quot;Docker Image&quot;. Type <code>ignisda/ryot</code> and hit Enter.</li><li>Click on the newly created service and go to the &quot;Variables&quot; section. Click on &quot;New Variable&quot; and then &quot;Add Reference&quot;. Click on &quot;Add&quot;.</li><li>Go to the &quot;Settings&quot; tab and then click on &quot;Generate Domain&quot;.</li><li>Optionally, you can set the <a href="https://docs.railway.app/deploy/healthchecks" target="_blank" rel="noreferrer">health-check</a> path to <code>/health</code>.</li></ol><h2 id="dokku" tabindex="-1">Dokku <a class="header-anchor" href="#dokku" aria-label="Permalink to “Dokku”">​</a></h2><p>This is a script that automatically sets up a Ryot server using the docker image uploaded to Ghcr and creates a <a href="https://dokku.com/" target="_blank" rel="noreferrer">Dokku</a> app. The script assumes you have a global domain set-up (i.e. the file <code>/home/dokku/VHOST</code> exists). It needs to be run with <code>sudo</code> privileges.</p><p>Re-running it updates the running server to the latest version.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -euo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pipefail</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$EUID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -ne</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  then</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Please run as root&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  exit</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IMAGE_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ignisda/ryot&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">APPNAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Enter the name of the app: &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> APPNAME</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># check if app name is empty</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;App name empty. Using default name: ryot&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    APPNAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ryot&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># pull the latest image</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rmi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$IMAGE_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$IMAGE_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:latest&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">image_sha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inspect </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--format=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{{ &#39;&quot;{{index .RepoDigests 0}}&quot;&#39; }} $IMAGE_NAME)&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Calculated image sha: </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$image_sha</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dokku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps:exists </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dokku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git:from-image </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $image_sha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Already on latest&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps:create &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postgres:create &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-service&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postgres:link &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-service&quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># check if required dokku plugin exists</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dokku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin:list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> letsencrypt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dokku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin:install https://github.com/dokku/dokku-letsencrypt.git</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> domains:add </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $APPNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.&quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/dokku/VHOST)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> letsencrypt:enable &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git:from-image &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$image_sha</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h2 id="fly" tabindex="-1">Fly <a class="header-anchor" href="#fly" aria-label="Permalink to “Fly”">​</a></h2><p>The demo Ryot instance is deployed to <a href="https://fly.io" target="_blank" rel="noreferrer">Fly</a>. The following steps are required to deploy to Fly.</p>`,10)),i("ol",null,[s[7]||(s[7]=a('<li><p>Create a new postgres database for Ryot.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flyctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postgres</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ryot-db</span></span></code></pre></div></li>',1)),i("li",null,[i("p",null,[s[0]||(s[0]=t("Copy the ",-1)),i("a",{href:`${h(n).filePath}/ci/fly.toml`,target:"_blank"},"fly.toml",8,k),s[1]||(s[1]=t(" file from this repository to your own repository. You ",-1)),s[2]||(s[2]=i("strong",null,"WILL",-1)),s[3]||(s[3]=t(" have to change the ",-1)),s[4]||(s[4]=i("code",null,"app",-1)),s[5]||(s[5]=t(" key to a unique name. Deploy it using the below command.",-1))]),s[6]||(s[6]=a('<div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flyctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> launch</span></span></code></pre></div>',1))]),s[8]||(s[8]=a('<li><p>Connect the database.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postgres</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> attach</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ryot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ryot-db</span></span></code></pre></div></li><li><p>Optionally you can configure the instance using <code>fly secrets set</code>.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secrets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FILE_STORAGE_S3_URL=&#39;https://play.min.io:9000&#39;</span></span></code></pre></div></li>',2))]),s[10]||(s[10]=a('<h2 id="cosmos" tabindex="-1">Cosmos <a class="header-anchor" href="#cosmos" aria-label="Permalink to “Cosmos”">​</a></h2><p><a href="https://cosmos-cloud.io/proxy#cosmos-ui/market-listing/cosmos-cloud/Ryot" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/Cosmos-Install%20Server-violet" alt="Static Badge"></a></p><p>You can install <code>ryot</code> from the Cosmos marketplace using this link: <a href="https://cosmos-cloud.io/proxy#cosmos-ui/market-listing/cosmos-cloud/Ryot" target="_blank" rel="noreferrer">Install Ryot</a> or by searching for <code>Ryot</code> in the marketplace.</p><p>Review the installation summary and click install to proceed. The database and credentials will be automatically created for you, but make sure you are happy with the URL chosen.</p><p>The instance will be available under your newly created URL via HTTPS if it is enabled. You can then proceed with creating your first user via the web interface&#39;s registration page.</p>',5))]))}});export{g as __pageData,y as default};
