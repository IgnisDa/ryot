import{v as e}from"./chunks/variables.D84Etxxq.js";import{c as l,o as h,ah as n,j as i,a,k as t}from"./chunks/framework.CCLJEThB.js";const r=["href"],p=["href"],y=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1761973425000}'),k={name:"index.md"},c=Object.assign(k,{setup(o){return(d,s)=>(h(),l("div",null,[s[5]||(s[5]=n(`<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to “Installation”">​</a></h1><p>Use the following docker-compose file:</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ryot-db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">postgres:16-alpine</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # at-least version 15 is required</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ryot-db</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">postgres_storage:/var/lib/postgresql/data</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Europe/Amsterdam</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">POSTGRES_DB=postgres</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">POSTGRES_USER=postgres</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">POSTGRES_PASSWORD=postgres</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ryot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ignisda/ryot:v9</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # or ghcr.io/ignisda/ryot:v9</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    pull_policy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ryot</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;8000:8000&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Europe/Amsterdam</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DATABASE_URL=postgres://postgres:postgres@ryot-db:5432/postgres</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SERVER_ADMIN_ACCESS_TOKEN=28ebb3ae554fa9867ba0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # REQUIRED: set to a long random string</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  postgres_storage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><p>Some providers (eg: TMDB for movies, IGDB for video games) need access tokens. Please visit the <a href="./configuration.html">configuration</a> page for more information.</p><h2 id="upgrading-to-pro" tabindex="-1">Upgrading to Pro <a class="header-anchor" href="#upgrading-to-pro" aria-label="Permalink to “Upgrading to Pro”">​</a></h2>`,5)),i("p",null,[s[0]||(s[0]=a("To see the features of the pro version, check the ",-1)),i("a",{href:`${t(e).mainWebsiteUrl}/features`,target:"_blank"},"features page",8,r),s[1]||(s[1]=a(". To upgrade to the pro version, you need to provide a ",-1)),s[2]||(s[2]=i("code",null,"SERVER_PRO_KEY",-1)),s[3]||(s[3]=a(" environment variable. You can get a key by purchasing it from the ",-1)),i("a",{href:t(e).mainWebsiteUrl,target:"_blank"},"website",8,p),s[4]||(s[4]=a(".",-1))]),s[6]||(s[6]=n(`<p>Once you have the key, you can set it in the <code>docker-compose.yml</code> file:</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ryot:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    environment:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+      - SERVER_PRO_KEY=&lt;pro_key_issued_to_you&gt;</span></span></code></pre></div><p>If the key is invalid or your subscription has expired, the server will automatically start with the community version. Since the two versions are compatible, you can switch between them by simply fixing the key and restarting the server.</p><h2 id="releases" tabindex="-1">Releases <a class="header-anchor" href="#releases" aria-label="Permalink to “Releases”">​</a></h2><p>Each version of Ryot is released as docker images. For example, if the latest tag is <code>v5.2.1</code>, then the docker image will be tagged as <code>v5.2.1</code>, <code>v5.2</code>, <code>v5</code>, <code>latest</code> and <code>sha-e145f71</code>. The images will be made available on <a href="https://hub.docker.com/r/ignisda/ryot" target="_blank" rel="noreferrer">Docker Hub</a> and <a href="https://ghcr.io/ignisda/ryot" target="_blank" rel="noreferrer">GitHub Container Registry</a>. Ryot is released on a (loosely) weekly basis.</p><p>If you prefer to live on the edge, you can use the <code>develop</code> docker tag which is released when changes are merged into the <code>main</code> branch. Please note that this tag often has major bugs and results in data loss. Only use this tag if you know what you are doing.</p><h2 id="telemetry" tabindex="-1">Telemetry <a class="header-anchor" href="#telemetry" aria-label="Permalink to “Telemetry”">​</a></h2><p>Ryot collects anonymous usage data to help me prioritize features. It uses a self-hosted <a href="https://umami.is/" target="_blank" rel="noreferrer">Umami</a> instance to collect this data. In addition to page views, a few events are also tracked and you can find them in the <a href="https://github.com/IgnisDa/ryot/blob/aa89adabc377e6da7fb8c8d768325efc3667329f/apps/frontend/app/lib/hooks.ts#L199-L222" target="_blank" rel="noreferrer">source code</a>.</p><p>You can opt out of this by setting a configuration parameter as described <a href="./configuration.html#important-parameters">here</a>.</p>`,9))]))}});export{y as __pageData,c as default};
