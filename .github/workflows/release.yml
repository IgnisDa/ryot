name: Release

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io

on:
  push:
    branches:
      - main
    tags:
      - "*-?v[0-9]+*"
  pull_request:
    branches:
      - main

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            name=${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=ref,event=pr,enable={{!is_default_branch}}
            type=semver,pattern=v{{version}},enable={{is_default_branch}}
            type=semver,pattern=v{{major}}.{{minor}},enable={{is_default_branch}}
            type=semver,pattern=v{{major}},enable={{is_default_branch}}
            type=raw,value=unstable,enable={{is_default_branch}}

      - name: Build and push to ghcr
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    if: ${{ needs.docker-build.result == 'success' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy
        run: flyctl deploy --remote-only --detach --config ci/fly.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: docker-build
    if: ${{ needs.docker-build.result == 'success' && startsWith(github.ref, 'refs/tags/') }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create a new release
        uses: softprops/action-gh-release@v1

      - name: Install nodejs dependencies
        run: yarn install --immutable

      - name: Setup Moon
        uses: moonrepo/setup-moon-action@v1.2.0

      - name: Build plugin
        run: |
          moon run kodi:build

      - name: Upload plugin to releases
        run: |
          gh release upload ${{ github.ref_name }} "tmp/script.ryot.zip"

  deploy-docs:
    needs: release
    runs-on: ubuntu-latest
    if: ${{ needs.release.result == 'success' }}
    defaults:
      run:
        working-directory: docs

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - name: Install dependencies
        run: poetry install

      - name: Deploy to github pages
        run: poetry run mkdocs gh-deploy --force
