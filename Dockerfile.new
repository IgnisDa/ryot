ARG NODE_BASE_IMAGE=node:20.10.0-bookworm-slim

FROM --platform=${BUILDPLATFORM} alpine as artifact
COPY artifact/ /artifact/
ARG TARGETARCH
ENV TARGETARCH=${TARGETARCH}
RUN mv /artifact/backend-${TARGETARCH}/ryot /artifact/ryot
RUN chmod +x /artifact/ryot

FROM $NODE_BASE_IMAGE
LABEL org.opencontainers.image.source="https://github.com/IgnisDa/ryot"
ENV FRONTEND_UMAMI_SCRIPT_URL="https://umami.diptesh.me/script.js"
ENV FRONTEND_UMAMI_WEBSITE_ID="5ecd6915-d542-4fda-aa5f-70f09f04e2e0"
COPY --from=caddy:2.7.5 /usr/bin/caddy /usr/local/bin/caddy
RUN apt-get update && apt-get install -y --no-install-recommends curl ca-certificates openssl && rm -rf /var/lib/apt/lists/*
RUN npm install --global concurrently@8.2.2 && concurrently --version
RUN useradd -m -u 1001 ryot
WORKDIR /home/ryot
USER ryot
COPY ci/Caddyfile /etc/caddy/Caddyfile
COPY --from=artifact --chown=ryot:ryot /artifact/frontend/node_modules ./node_modules
COPY --from=artifact --chown=ryot:ryot /artifact/frontend/package.json ./package.json
COPY --from=artifact --chown=ryot:ryot /artifact/frontend/build ./build
COPY --from=artifact --chown=ryot:ryot /artifact/ryot /usr/local/bin/ryot
CMD [ \
    "concurrently", "--names", "frontend,backend,proxy", "--kill-others", \
    "PORT=3000 npx remix-serve ./build/server/index.js", \
    "BACKEND_PORT=5000 /usr/local/bin/ryot", \
    "caddy run --config /etc/caddy/Caddyfile" \
    ]
